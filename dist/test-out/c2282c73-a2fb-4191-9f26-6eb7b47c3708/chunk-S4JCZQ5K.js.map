{
  "version": 3,
  "sources": ["src/app/services/api.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { users } from '../interfaces/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Api {\r\n  private url = 'https://jsonplaceholder.typicode.com/users?_limit=3';\r\n\r\n  constructor(private http : HttpClient ) {}\r\n\r\n  getUser(){\r\n    return this.http.get(this.url);   \r\n  }\r\n  \r\n  getUserById (id: number) : Observable <users[]> {\r\n    const params = new HttpParams().set('id', id.toString());\r\n    return this.http.get<users[]>(this.url, {params});\r\n  }\r\n\r\n  addUser(user: users[]) : Observable <any> {\r\n    return this.http.post(this.url, user);\r\n  }\r\n\r\n  deleteUser(id : number) : Observable <any> {\r\n    const params = new HttpParams().set('id', id.toString());\r\n    return this.http.get<users[]>(this.url, {params});\r\n  }\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBGA,oBAAA,WAAA;AAAA,aAAAC;IAAA;EAAA;AAAA,SAAAA;AAAA;IAZUC;;;;;AARb;AACA;AAmBGF,kBAAA;AAnB2DA,kBAAA,EAAAG,EAAA,CAAA;AAOvD,IAAMD,MAAN,MAAMA,KAAG;MAGME;MAFZC,OAAGL,cAAA,EAAAG,EAAA,CAAA,KAAG;MAEdG,YAAoBF,MAAiB;AAAAJ,sBAAA,EAAAO,EAAA,CAAA;AAAAP,sBAAA,EAAAG,EAAA,CAAA;AAAjB,aAAAC,OAAAA;MAAqB;MAEzCI,UAAO;AAAAR,sBAAA,EAAAO,EAAA,CAAA;AAAAP,sBAAA,EAAAG,EAAA,CAAA;AACL,eAAO,KAAKC,KAAKK,IAAI,KAAKJ,GAAG;MAC/B;MAEAK,YAAaC,IAAU;AAAAX,sBAAA,EAAAO,EAAA,CAAA;AACrB,cAAMK,UAAMZ,cAAA,EAAAG,EAAA,CAAA,KAAG,IAAIU,WAAU,EAAGC,IAAI,MAAMH,GAAGI,SAAQ,CAAE;AAAEf,sBAAA,EAAAG,EAAA,CAAA;AACzD,eAAO,KAAKC,KAAKK,IAAa,KAAKJ,KAAK;UAACO;QAAM,CAAC;MAClD;MAEAI,QAAQC,MAAa;AAAAjB,sBAAA,EAAAO,EAAA,CAAA;AAAAP,sBAAA,EAAAG,EAAA,CAAA;AACnB,eAAO,KAAKC,KAAKc,KAAK,KAAKb,KAAKY,IAAI;MACtC;MAEAE,WAAWR,IAAW;AAAAX,sBAAA,EAAAO,EAAA,CAAA;AACpB,cAAMK,UAAMZ,cAAA,EAAAG,EAAA,CAAA,KAAG,IAAIU,WAAU,EAAGC,IAAI,MAAMH,GAAGI,SAAQ,CAAE;AAAEf,sBAAA,EAAAG,EAAA,CAAA;AACzD,eAAO,KAAKC,KAAKK,IAAa,KAAKJ,KAAK;UAACO;QAAM,CAAC;MAClD;;;;;;;;;;AArBWV,UAAGkB,WAAA,CAHfC,WAAW;MACVC,YAAY;KACb,CAAC,GACWpB,GAAG;;;",
  "names": ["cov_u2jgnnedm", "actualCoverage", "Api", "s", "http", "url", "constructor", "f", "getUser", "get", "getUserById", "id", "params", "HttpParams", "set", "toString", "addUser", "user", "post", "deleteUser", "__decorate", "Injectable", "providedIn"]
}
