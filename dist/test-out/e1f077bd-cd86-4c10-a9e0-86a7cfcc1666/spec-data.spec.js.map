{
  "version": 3,
  "sources": ["src/app/services/data.spec.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\r\nimport { Dataservice } from './data';\r\n\r\nfdescribe('Api', () => {\r\n  let service: Dataservice;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [Dataservice]\r\n    });\r\n\r\n    service = TestBed.inject(Dataservice);\r\n  });\r\n\r\n  it('data service should be called', () => {\r\n    expect(service).toBeTruthy;\r\n  })\r\n\r\n  it('should return empty array initially', () => {\r\n    expect(service.getProducts()).toEqual([]);\r\n  })\r\n\r\n  it('should return products after setting them value', () => {\r\n    service.products = ['Apple', 'Banana', 'Mango'];\r\n    expect(service.getProducts()).toEqual(['Apple', 'Banana', 'Mango']);\r\n  })\r\n\r\n  it('should add products when addProducts func is called', () => {\r\n    service.products = ['Apple', 'Banana', 'Mango'];\r\n    service.addProducts('Orange');\r\n    expect(service.getProducts()).toEqual(['Apple', 'Banana', 'Mango', 'Orange']);\r\n  })\r\n\r\n  it('should remove all products when removeProduct func is called', () => {\r\n    service.products = ['Apple', 'Banana', 'Mango', 'Orange'];\r\n    service.clearProducts();\r\n    expect(service.getProducts()).toEqual([]);\r\n  })\r\n\r\n  it('should remove products when removeProduct func is called', () => {\r\n    service.products = ['Apple', 'Banana', 'Mango', 'Orange'];\r\n    service.removeProduct('Apple');\r\n    expect(service.getProducts()).toEqual(['Banana', 'Mango', 'Orange']);\r\n  })\r\n});"],
  "mappings": ";;;;;;;;;;;AAAA;AACA;AAEA,UAAU,OAAO,MAAK;AACpB,MAAI;AAEJ,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC7B,WAAW,CAAC,WAAW;KACxB;AAED,cAAU,QAAQ,OAAO,WAAW;EACtC,CAAC;AAED,KAAG,iCAAiC,MAAK;AACvC,WAAO,OAAO,EAAE;EAClB,CAAC;AAED,KAAG,uCAAuC,MAAK;AAC7C,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAA,CAAE;EAC1C,CAAC;AAED,KAAG,mDAAmD,MAAK;AACzD,YAAQ,WAAW,CAAC,SAAS,UAAU,OAAO;AAC9C,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAC,SAAS,UAAU,OAAO,CAAC;EACpE,CAAC;AAED,KAAG,uDAAuD,MAAK;AAC7D,YAAQ,WAAW,CAAC,SAAS,UAAU,OAAO;AAC9C,YAAQ,YAAY,QAAQ;AAC5B,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAC,SAAS,UAAU,SAAS,QAAQ,CAAC;EAC9E,CAAC;AAED,KAAG,gEAAgE,MAAK;AACtE,YAAQ,WAAW,CAAC,SAAS,UAAU,SAAS,QAAQ;AACxD,YAAQ,cAAa;AACrB,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAA,CAAE;EAC1C,CAAC;AAED,KAAG,4DAA4D,MAAK;AAClE,YAAQ,WAAW,CAAC,SAAS,UAAU,SAAS,QAAQ;AACxD,YAAQ,cAAc,OAAO;AAC7B,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAC,UAAU,SAAS,QAAQ,CAAC;EACrE,CAAC;AACH,CAAC;",
  "names": []
}
