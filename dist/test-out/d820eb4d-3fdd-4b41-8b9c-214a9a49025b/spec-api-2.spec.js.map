{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\routes\\api\\api.html", "angular:jit:style:src\\app\\routes\\api\\api.css", "src/app/routes/api/api.ts", "src/app/routes/api/api.spec.ts"],
  "sourcesContent": ["<h2>User Management</h2>\r\n\r\n<!-- Add User Form -->\r\n<form class=\" flex flex-col gap-5 p-10 w-1/3 \" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n    <input class=\" border p-2  \" formControlName=\"name\" placeholder=\"Name\" />\r\n    <input class=\" border p-2  \" formControlName=\"email\" placeholder=\"Email\" type=\"email\" />\r\n    <input class=\" border p-2  \" formControlName=\"password\" placeholder=\"Password\" type=\"password\" />\r\n    <button class=\" border \" type=\"submit\" [disabled]=\"userForm.invalid\">Add User</button>\r\n</form>\r\n\r\n\r\n<div class=\" flex justify-center items-center \">\r\n    <hr class=\" w-10/12 \" />\r\n</div>\r\n\r\n<button class=\" border \" (click)=\"loadUsers()\">Fetch Users</button>\r\n\r\n<ul>\r\n    @for (u of user; track u.id) {\r\n    <li>\r\n        <strong>ID:</strong> {{ u.id }} |\r\n        <strong>Name:</strong> {{ u.name }} |\r\n        <strong>Email:</strong> {{ u.email }} |\r\n        <strong>Password:</strong> {{ u.password }}\r\n        <button (click)=\"removeUser(u.id)\">Delete</button>\r\n    </li>\r\n    }\r\n</ul>", "/* src/app/routes/api/api.css */\n/*# sourceMappingURL=api.css.map */\n", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,ReactiveFormsModule } from '@angular/forms';\r\nimport { Api } from '../../services/api';\r\nimport { SlimUser } from '../../interfaces/users';\r\n\r\n\r\n@Component({\r\n  selector: 'app-api',\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './api.html',\r\n  styleUrls: ['./api.css']\r\n})\r\nexport class API implements OnInit {\r\n  user: SlimUser[] = [];\r\n  userForm!: FormGroup;\r\n\r\n  constructor(private api: Api, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.api.getUser().subscribe((data: any) => {\r\n      this.user = data.map((u: { id: any; name: any; email: any; password: any; }) => ({\r\n        id: u.id,\r\n        name: u.name,\r\n        email: u.email,\r\n        password: u.password\r\n      }));\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      const newId =\r\n        this.user.length > 0\r\n          ? Math.max(...this.user.map((u) => u.id)) + 1\r\n          : 1;\r\n\r\n      const newUser: any = {\r\n        id: newId,\r\n        ...(this.userForm.value as Omit<SlimUser, 'id'>)  // ðŸ‘ˆ CAST here\r\n      };\r\n\r\n      this.api.addUser(newUser).subscribe(() => {\r\n        console.log('User added:', newUser);\r\n        this.user.push(newUser);  // ðŸ‘Œ No more error\r\n        this.userForm.reset();\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUser(id: number) {\r\n    this.api.deleteUser(id).subscribe(() => {\r\n      console.log(`User with id=${id} deleted`);\r\n      this.user = this.user.filter((u: { id: number; }) => u.id !== id);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { API } from './api';\r\n\r\ndescribe('API', () => {\r\n  let component: API;\r\n  let fixture: ComponentFixture<API>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [API]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(API);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": ["init_api", "api_default", "init_api", "cov_1fxtiklrag", "actualCoverage", "API", "s", "api", "fb", "user", "userForm", "constructor", "f", "ngOnInit", "group", "name", "Validators", "required", "email", "password", "loadUsers", "getUser", "subscribe", "data", "map", "u", "id", "onSubmit", "valid", "b", "newId", "length", "Math", "max", "newUser", "value", "addUser", "console", "log", "push", "reset", "removeUser", "deleteUser", "filter", "__decorate", "Component", "selector", "imports", "ReactiveFormsModule", "template", "__NG_CLI_RESOURCE__0", "init_api"]
}
