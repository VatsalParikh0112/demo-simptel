{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\routes\\api\\api.html", "angular:jit:style:src\\app\\routes\\api\\api.css", "src/app/routes/api/api.ts", "src/app/routes/api/api.spec.ts"],
  "sourcesContent": ["<h2>User Management</h2>\r\n\r\n<!-- Add User Form -->\r\n<form class=\" flex flex-col gap-5 p-10 w-1/3 \" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n    <input class=\" border p-2  \" formControlName=\"name\" placeholder=\"Name\" />\r\n    <input class=\" border p-2  \" formControlName=\"email\" placeholder=\"Email\" type=\"email\" />\r\n    <input class=\" border p-2  \" formControlName=\"password\" placeholder=\"Password\" type=\"password\" />\r\n    <button class=\" border \" type=\"submit\" [disabled]=\"userForm.invalid\">Add User</button>\r\n</form>\r\n\r\n\r\n<div class=\" flex justify-center items-center \">\r\n    <hr class=\" w-10/12 \" />\r\n</div>\r\n\r\n<button class=\" border \" (click)=\"loadUsers()\">Fetch Users</button>\r\n\r\n<ul>\r\n    @for (u of user; track u.id) {\r\n    <li>\r\n        <strong>ID:</strong> {{ u.id }} |\r\n        <strong>Name:</strong> {{ u.name }} |\r\n        <strong>Email:</strong> {{ u.email }} |\r\n        <strong>Password:</strong> {{ u.password }}\r\n        <button (click)=\"removeUser(u.id)\">Delete</button>\r\n    </li>\r\n    }\r\n</ul>", "/* src/app/routes/api/api.css */\n/*# sourceMappingURL=api.css.map */\n", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,ReactiveFormsModule } from '@angular/forms';\r\nimport { Api } from '../../services/api';\r\nimport { SlimUser } from '../../interfaces/users';\r\n\r\n\r\n@Component({\r\n  selector: 'app-api',\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './api.html',\r\n  styleUrls: ['./api.css']\r\n})\r\nexport class API implements OnInit {\r\n  user: SlimUser[] = [];\r\n  userForm!: FormGroup;\r\n\r\n  constructor(private api: Api, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.api.getUser().subscribe((data: any) => {\r\n      this.user = data.map((u: { id: any; name: any; email: any; password: any; }) => ({\r\n        id: u.id,\r\n        name: u.name,\r\n        email: u.email,\r\n        password: u.password\r\n      }));\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      const newId =\r\n        this.user.length > 0\r\n          ? Math.max(...this.user.map((u) => u.id)) + 1\r\n          : 1;\r\n\r\n      const newUser: any = {\r\n        id: newId,\r\n        ...(this.userForm.value as Omit<SlimUser, 'id'>)  // ðŸ‘ˆ CAST here\r\n      };\r\n\r\n      this.api.addUser(newUser).subscribe(() => {\r\n        console.log('User added:', newUser);\r\n        this.user.push(newUser);  // ðŸ‘Œ No more error\r\n        this.userForm.reset();\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUser(id: number) {\r\n    this.api.deleteUser(id).subscribe(() => {\r\n      console.log(`User with id=${id} deleted`);\r\n      this.user = this.user.filter((u: { id: number; }) => u.id !== id);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { API } from './api';\r\n\r\ndescribe('API', () => {\r\n  let component: API;\r\n  let fixture: ComponentFixture<API>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [API]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(API);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAAAA,YAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAC;AAAA,IAAAC,YAAA;AAAA;AAAA,IAAAD,eAAA;AAAA;AAAA;;;ICYa;;;;;;;AAZb;AACA;AACA;AAUO,IAAM,MAAN,MAAME,KAAG;MAIM;MAAkB;MAHtC,OAAmB,CAAA;MACnB;MAEA,YAAoB,KAAkB,IAAe;AAAjC,aAAA,MAAA;AAAkB,aAAA,KAAA;MAAmB;MAEzD,WAAQ;AACN,aAAK,WAAW,KAAK,GAAG,MAAM;UAC5B,MAAM,CAAC,IAAI,WAAW,QAAQ;UAC9B,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;UACnD,UAAU,CAAC,IAAI,WAAW,QAAQ;SACnC;AACD,aAAK,UAAS;MAChB;MAEA,YAAS;AACP,aAAK,IAAI,QAAO,EAAG,UAAU,CAAC,SAAa;AACzC,eAAK,OAAO,KAAK,IAAI,CAAC,OAA2D;YAC/E,IAAI,EAAE;YACN,MAAM,EAAE;YACR,OAAO,EAAE;YACT,UAAU,EAAE;YACZ;QACJ,CAAC;MACH;MAEA,WAAQ;AACN,YAAI,KAAK,SAAS,OAAO;AACvB,gBAAM,QACJ,KAAK,KAAK,SAAS,IACf,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,IAC1C;AAEN,gBAAM,UAAe;YACnB,IAAI;aACA,KAAK,SAAS;AAGpB,eAAK,IAAI,QAAQ,OAAO,EAAE,UAAU,MAAK;AACvC,oBAAQ,IAAI,eAAe,OAAO;AAClC,iBAAK,KAAK,KAAK,OAAO;AACtB,iBAAK,SAAS,MAAK;UACrB,CAAC;QACH;MACF;MAEA,WAAW,IAAU;AACnB,aAAK,IAAI,WAAW,EAAE,EAAE,UAAU,MAAK;AACrC,kBAAQ,IAAI,gBAAgB,EAAE,UAAU;AACxC,eAAK,OAAO,KAAK,KAAK,OAAO,CAAC,MAAuB,EAAE,OAAO,EAAE;QAClE,CAAC;MACH;;;;;;AAnDW,UAAG,WAAA;MANf,UAAU;QACT,UAAU;QACV,SAAS,CAAC,mBAAmB;QAC7B,UAAA;;OAED;OACY,GAAG;;;;;ACZhB;;;AAEA,IAAAC;AAEA,aAAS,OAAO,MAAK;AACnB,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,GAAG;SACd,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,GAAG;AACrC,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["init_api", "api_default", "init_api", "API", "init_api"]
}
