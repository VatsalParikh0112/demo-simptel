{
  "version": 3,
  "sources": ["src/app/shared/button1/button1.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { Router } from '@angular/router';\r\nimport { Button1 } from './button1';\r\n\r\nfdescribe('Button1', () => {\r\n  let component: Button1;\r\n  let fixture: ComponentFixture<Button1>;\r\n  let routerSpy: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(async () => {\r\n    const spy = jasmine.createSpyObj('Router', ['navigate']);\r\n    await TestBed.configureTestingModule({\r\n      imports: [Button1],\r\n      providers: [{provide : Router, useValue : spy}]\r\n    })\r\n      .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(Button1);\r\n    component = fixture.componentInstance;\r\n    routerSpy = TestBed.inject(Router) as jasmine.SpyObj<Router>;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should render label in html', () => {\r\n    expect(component.label()).toBe('');\r\n  });\r\n\r\n  it('should call router.navigate when redirect function is called ', () => {\r\n    component.redirect();\r\n    expect(routerSpy.navigate).toHaveBeenCalledWith(['/']);\r\n  })\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA;AACA;AAEA,cAAU,WAAW,MAAK;AACxB,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,MAAM,QAAQ,aAAa,UAAU,CAAC,UAAU,CAAC;AACvD,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,OAAO;UACjB,WAAW,CAAC,EAAC,SAAU,QAAQ,UAAW,IAAG,CAAC;SAC/C,EACE,kBAAiB;AAEpB,kBAAU,QAAQ,gBAAgB,OAAO;AACzC,oBAAY,QAAQ;AACpB,oBAAY,QAAQ,OAAO,MAAM;AACjC,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AAED,SAAG,+BAA+B,MAAK;AACrC,eAAO,UAAU,MAAK,CAAE,EAAE,KAAK,EAAE;MACnC,CAAC;AAED,SAAG,iEAAiE,MAAK;AACvE,kBAAU,SAAQ;AAClB,eAAO,UAAU,QAAQ,EAAE,qBAAqB,CAAC,GAAG,CAAC;MACvD,CAAC;IACH,CAAC;;;",
  "names": []
}
