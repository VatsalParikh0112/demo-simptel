{
  "version": 3,
  "sources": ["src/app/layout/navbar/navbar.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { Router } from '@angular/router';\r\nimport { Navbar } from './navbar';\r\nimport { of } from 'rxjs';\r\n\r\nfdescribe('Navbar', () => {\r\n  let component: Navbar;\r\n  let fixture: ComponentFixture<Navbar>;\r\n  let routerSpy: jasmine.SpyObj<Router>;\r\n  let instance: Navbar;\r\n\r\n  beforeEach(async () => {\r\n    instance = new Navbar();\r\n    const spy = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    await TestBed.configureTestingModule({\r\n      imports: [Navbar],\r\n      providers: [{ provide: Router, useValue: spy }]\r\n    })\r\n      .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(Navbar);\r\n    component = fixture.componentInstance;\r\n    routerSpy = TestBed.inject(Router) as jasmine.SpyObj<Router>;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('throw error when navigateTo func called', () => {\r\n    expect(() => instance.navigateTo()).toThrowError('Method not implemented.')\r\n  });\r\n\r\n  it('should navigate to path when clickEvent func called', () => {\r\n    component.clickEvent('/about');\r\n    expect(routerSpy.navigate).toHaveBeenCalledWith(['/about'])\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA;AACA;AAGA,cAAU,UAAU,MAAK;AACvB,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,mBAAW,IAAI,OAAM;AACrB,cAAM,MAAM,QAAQ,aAAa,UAAU,CAAC,UAAU,CAAC;AAEvD,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,MAAM;UAChB,WAAW,CAAC,EAAE,SAAS,QAAQ,UAAU,IAAG,CAAE;SAC/C,EACE,kBAAiB;AAEpB,kBAAU,QAAQ,gBAAgB,MAAM;AACxC,oBAAY,QAAQ;AACpB,oBAAY,QAAQ,OAAO,MAAM;AACjC,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;AAED,SAAG,2CAA2C,MAAK;AACjD,eAAO,MAAM,SAAS,WAAU,CAAE,EAAE,aAAa,yBAAyB;MAC5E,CAAC;AAED,SAAG,uDAAuD,MAAK;AAC7D,kBAAU,WAAW,QAAQ;AAC7B,eAAO,UAAU,QAAQ,EAAE,qBAAqB,CAAC,QAAQ,CAAC;MAC5D,CAAC;IACH,CAAC;;;",
  "names": []
}
