{
  "version": 3,
  "sources": ["src/app/services/data.spec.ts"],
  "sourcesContent": ["import { TestBed } from '@angular/core/testing';\r\nimport { Dataservice } from './data';\r\n\r\nfdescribe('Api', () => {\r\n  let service: Dataservice;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      providers: [Dataservice]\r\n    });\r\n\r\n    service = TestBed.inject(Dataservice);\r\n  });\r\n\r\n  it('data service should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n\r\n  it('should return empty products when call initially', () => {\r\n    expect(service.getProducts()).toEqual([]);\r\n  });\r\n\r\n  it('should add products', () => {\r\n    service.addProducts('laptop');\r\n    expect(service.getProducts()).toEqual(['laptop']);\r\n  });\r\n\r\n  it('should clear all products', () => { \r\n    service.addProducts('laptop');\r\n    service.addProducts('phone');\r\n    expect(service.getProducts().length).toBe(2);\r\n\r\n    const cleared = service.clearProducts();\r\n\r\n    expect(cleared).toEqual([]);\r\n    expect(service.getProducts()).toEqual([]);\r\n  });\r\n\r\n  it('should remove selected products', () => {\r\n    service.addProducts('laptop');\r\n    service.addProducts('tablet');\r\n    service.addProducts('phone');\r\n\r\n    service.removeProduct('phone');\r\n    expect(service.getProducts()).toEqual(['laptop', 'tablet']);\r\n  });\r\n});"],
  "mappings": ";;;;;;;;;;;AAAA;AACA;AAEA,UAAU,OAAO,MAAK;AACpB,MAAI;AAEJ,aAAW,MAAK;AACd,YAAQ,uBAAuB;MAC7B,WAAW,CAAC,WAAW;KACxB;AAED,cAAU,QAAQ,OAAO,WAAW;EACtC,CAAC;AAED,KAAG,kCAAkC,MAAK;AACxC,WAAO,OAAO,EAAE,WAAU;EAC5B,CAAC;AAED,KAAG,oDAAoD,MAAK;AAC1D,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAA,CAAE;EAC1C,CAAC;AAED,KAAG,uBAAuB,MAAK;AAC7B,YAAQ,YAAY,QAAQ;AAC5B,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAC,QAAQ,CAAC;EAClD,CAAC;AAED,KAAG,6BAA6B,MAAK;AACnC,YAAQ,YAAY,QAAQ;AAC5B,YAAQ,YAAY,OAAO;AAC3B,WAAO,QAAQ,YAAW,EAAG,MAAM,EAAE,KAAK,CAAC;AAE3C,UAAM,UAAU,QAAQ,cAAa;AAErC,WAAO,OAAO,EAAE,QAAQ,CAAA,CAAE;AAC1B,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAA,CAAE;EAC1C,CAAC;AAED,KAAG,mCAAmC,MAAK;AACzC,YAAQ,YAAY,QAAQ;AAC5B,YAAQ,YAAY,QAAQ;AAC5B,YAAQ,YAAY,OAAO;AAE3B,YAAQ,cAAc,OAAO;AAC7B,WAAO,QAAQ,YAAW,CAAE,EAAE,QAAQ,CAAC,UAAU,QAAQ,CAAC;EAC5D,CAAC;AACH,CAAC;",
  "names": []
}
