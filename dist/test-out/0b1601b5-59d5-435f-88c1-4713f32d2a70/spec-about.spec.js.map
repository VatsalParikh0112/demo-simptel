{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\routes\\about\\about.html", "angular:jit:style:src\\app\\routes\\about\\about.css", "src/app/routes/about/about.ts", "src/app/routes/about/about.spec.ts"],
  "sourcesContent": ["<p>about -- {{ aboutId() }} - {{limit()}} </p>\r\n\r\n\r\n<div class=\" flex flex-col p-10 items-center gap-10 \">\r\n    <div class=\" text-5xl p-2 \">Product List</div>\r\n    <div class=\" w-full flex flex-col items-center gap-10 justify-center \">\r\n        <ul class=\" list-disc flex flex-col items-center gap-5 w-1/2 \">\r\n            @for (product of productList; track $index) {\r\n\r\n            <li class=\" flex w-full gap-2 items-center justify-between \">\r\n                <div class=\"border rounded-xl p-2 w-full\">{{product}}</div>\r\n                <button class=\" border rounded-xl p-2 \" (click)=\"removeProduct(product)\">Remove</button>\r\n            </li>\r\n            }@empty {\r\n            <div class=\" text-xl underline \">Your product list is empty.</div>\r\n            }\r\n        </ul>\r\n\r\n        <button class=\" border rounded-xl p-2 \" (click)=\"clearProducts()\">Clear all</button>\r\n    </div>\r\n\r\n\r\n    <h3 class=\" text-5xl \">Add a New Product</h3>\r\n    <input #newProduct class=\" border rounded-xl p-2 placeholder:text-gray-400 \"\r\n        (keyup.enter)=\"addNewProduct(newProduct.value); newProduct.value = ''\" placeholder=\"New product name\">\r\n    <button class=\" border rounded-xl p-2 \" (click)=\"addNewProduct(newProduct.value); newProduct.value = ''\">Add</button>\r\n</div>\r\n\r\n\r\n<div>\r\n    <app-button label=\"shared button about\" ></app-button>\r\n</div>", "/* src/app/routes/about/about.css */\n/*# sourceMappingURL=about.css.map */\n", "import { Component, input, OnInit } from '@angular/core';\r\nimport { Dataservice } from '../../services/data';\r\nimport { Button } from '../../shared/button/button';\r\n\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  standalone: true,\r\n  imports: [Button],\r\n  templateUrl: './about.html',\r\n  styleUrl: './about.css'\r\n})\r\nexport class About implements OnInit {\r\n  aboutId = input.required<string>();\r\n  limit = input.required<string>();\r\n\r\n  productList: string[] = [];\r\n\r\n  constructor(private dataService: Dataservice) { }\r\n\r\n  private refreshProductList() {\r\n    this.productList = this.dataService.getProducts();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.productList = this.dataService.getProducts()\r\n  }\r\n\r\n  addNewProduct(productName: string) {\r\n    if (productName) {\r\n      this.dataService.addProducts(productName);\r\n      this.refreshProductList();\r\n    }\r\n  }\r\n\r\n  removeProduct(productName: string) {\r\n    if (productName) {\r\n      this.dataService.removeProduct(productName);\r\n      this.refreshProductList();\r\n    }\r\n  }\r\n\r\n  clearProducts() {\r\n    this.dataService.clearProducts();\r\n    this.refreshProductList();\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { About } from './about';\r\n\r\ndescribe('About', () => {\r\n  let component: About;\r\n  let fixture: ComponentFixture<About>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [About]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(About);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,cAAA;AAAA;AAAA,IAAAD,ioBUE,oBAAA,WAAA;AAAA,aAAAC;IAAA;EAAA;AAAA,SAAAA;AAAA;IARGC;;;;;;;AAZb;AACA;AACA;;AAkBUF,kBAAA;;AARH,IAAME,QAAN,MAAMA,OAAK;MAMIC;yCALVC,MAAMC,SAAQ;uCAChBD,MAAMC,SAAQ;MAEtBC,eAAWN,cAAA,EAAAO,EAAA,CAAA,KAAa,CAAA;MAExBC,YAAoBL,aAAwB;AAAAH,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,CAAA;AAAxB,aAAAJ,cAAAA;MAA4B;MAExCO,qBAAkB;AAAAV,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,CAAA;AACxB,aAAKD,cAAc,KAAKH,YAAYQ,YAAW;MACjD;MAEAC,WAAQ;AAAAZ,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,CAAA;AACN,aAAKD,cAAc,KAAKH,YAAYQ,YAAW;MACjD;MAEAE,cAAcC,aAAmB;AAAAd,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,CAAA;AAC/B,YAAIO,aAAa;AAAAd,wBAAA,EAAAe,EAAA,CAAA,EAAA,CAAA;AAAAf,wBAAA,EAAAO,EAAA,CAAA;AACf,eAAKJ,YAAYa,YAAYF,WAAW;AAAEd,wBAAA,EAAAO,EAAA,CAAA;AAC1C,eAAKG,mBAAkB;QACzB,OAAC;AAAAV,wBAAA,EAAAe,EAAA,CAAA,EAAA,CAAA;QAAA;MACH;MAEAE,cAAcH,aAAmB;AAAAd,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,EAAA;AAC/B,YAAIO,aAAa;AAAAd,wBAAA,EAAAe,EAAA,CAAA,EAAA,CAAA;AAAAf,wBAAA,EAAAO,EAAA,EAAA;AACf,eAAKJ,YAAYc,cAAcH,WAAW;AAAEd,wBAAA,EAAAO,EAAA,EAAA;AAC5C,eAAKG,mBAAkB;QACzB,OAAC;AAAAV,wBAAA,EAAAe,EAAA,CAAA,EAAA,CAAA;QAAA;MACH;MAEAG,gBAAa;AAAAlB,sBAAA,EAAAS,EAAA,CAAA;AAAAT,sBAAA,EAAAO,EAAA,EAAA;AACX,aAAKJ,YAAYe,cAAa;AAAGlB,sBAAA,EAAAO,EAAA,EAAA;AACjC,aAAKG,mBAAkB;MACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjCWR,YAAKiB,WAAA,CAPjBC,UAAU;MACTC,UAAU;MACVC,YAAY;MACZC,SAAS,CAACC,MAAM;MAChBC,UAAAC;;KAED,CAAC,GACWxB,KAAK;;;;;ACZlB;;;AAEA,IAAAyB;AAEA,aAAS,SAAS,MAAK;AACrB,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,KAAK;SAChB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,KAAK;AACvC,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["about_default", "init_about", "cov_cag5rv6ml", "actualCoverage", "About", "dataService", "input", "required", "productList", "s", "constructor", "f", "refreshProductList", "getProducts", "ngOnInit", "addNewProduct", "productName", "b", "addProducts", "removeProduct", "clearProducts", "__decorate", "Component", "selector", "standalone", "imports", "Button", "template", "__NG_CLI_RESOURCE__0", "init_about"]
}
